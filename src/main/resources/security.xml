<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
             xsi:schemaLocation="
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.2.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <jdbc-user-service id="userDetailsService" data-source-ref="dataSource"  users-by-username-query="SELECT login as principal,password as credentials, enabled from users WHERE login = ?"
                    authorities-by-username-query="SELECT user_id as principal, role_name as authority FROM user_roles WHERE user_id = ?"/>
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="lfEntryPoint" class="org.apx.nova.servlet.points.LFEntryPoint">
        <beans:constructor-arg value="/login"/>
    </beans:bean>

    <global-method-security secured-annotations="enabled" authentication-manager-ref="authenticationManager" pre-post-annotations="enabled" />

    <!--<beans:bean id="loginErrorFilter" class="org.apx.nova.servlet.filter.LoginErrorFilter" />-->

    <http auto-config="true" use-expressions="true" entry-point-ref="lfEntryPoint"  >
        <form-login always-use-default-target="false" login-processing-url="/login"  username-parameter="username" password-parameter="password" />
        <intercept-url pattern="/rest/api/**" access="isAuthenticated()" />
        <logout invalidate-session="true" logout-url="/logout" logout-success-url="/" />
        <!--<custom-filter ref="loginErrorFilter" after="FILTER_SECURITY_INTERCEPTOR" />-->
    </http>
</beans:beans>
